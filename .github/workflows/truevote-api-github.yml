name: Build, Test, Deploy

on:
  push:
    branches: [ master ]
    paths-ignore:
      - CONTRIBUTING.md
      - README.md
      - .gitignore

  pull_request:
    branches: [ master ]

env:
  AZURE_FUNCTIONAPP_NAME: truevote-api
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './TrueVote.Api'
  DOTNET_VERSION: '6.0.x'

jobs:
  build_and_test_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Invoke Version Bump Workflow on PR
      if: github.event_name == 'pull_request'
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: Bump Version
        token: ${{ secrets.ACTIONS_PERSONAL_ACCESS_TOKEN }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Dependencies
      run: |
        dotnet restore
        dotnet tool restore

    - name: Fixups
      run: |
        git update-index --chmod=+x ./scripts/*
        chmod +x ./scripts/*
        # ./scripts/update-git.sh

    - name: Build
      run: |
        dotnet build --no-restore

    - name: Test
      shell: pwsh  
      run: |
        ./scripts/RunTests.ps1 ci=true

    - name: Publish Coverage to Coveralls
      if: github.ref == 'refs/heads/master'
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: TrueVote.Api.Tests/TestResults/coverage.info

    #- name: Archive Production Artifacts
    #  if: github.ref == 'refs/heads/master'
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: build-output
    #    path: TrueVote.Api/bin/*

    #- name: Archive Code Coverage Results
    #  if: github.ref == 'refs/heads/master'
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: code-coverage-report
    #    path: TrueVote.Api.Tests/TestResults/*

    - name: 'Build Release Version'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --no-restore --configuration Release --output ./output
        popd

    #- name: 'Post Build Tasks'
    #  if: github.ref == 'refs/heads/master'
    #  shell: bash
    #  run: |
    #    ./scripts/build-version.sh
    #    cp TrueVote.Api/version.json ./output

    - name: 'Publish to Azure Pre-Prod'
      if: github.ref != 'refs/heads/master'
      uses: Azure/functions-action@v1
      id: fa-preprod
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        slot-name: preprod
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_PREPROD }}

    - name: Invoke Preprod Integration Workflow on PR
      if: github.event_name == 'pull_request'
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: Preprod Integration
        token: ${{ secrets.ACTIONS_PERSONAL_ACCESS_TOKEN }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: 'Publish to Azure Production'
      if: github.ref == 'refs/heads/master'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
